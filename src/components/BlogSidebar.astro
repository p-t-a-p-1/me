---
import type { ComponentProps } from "astro/types";
import { Article, Tag, newtClient } from "../lib/newt";
import TagListItem from "./TagListItem.astro";

interface Props {
  tags: Tag[];
}

const { tags } = Astro.props;

// サイドバー用に全タグを取得
const { items: allTags } = await newtClient.getContents<Tag>({
  appUid: "meBlog",
  modelUid: "tag",
});

// 記事一覧を取得してタグごとのカウントを計算
const { items: articles } = await newtClient.getContents<Article>({
  appUid: "meBlog",
  modelUid: "article",
  query: {
    select: ["tags"],
  },
});

// タグごとの記事数をカウント
const tagCounts: Record<string, number> = {};
for (const article of articles) {
  if (article.tags) {
    for (const tag of article.tags) {
      if (tag._id) {
        tagCounts[tag._id] = (tagCounts[tag._id] || 0) + 1;
      }
    }
  }
}
---

<aside class="blog-sidebar">
	<div class="blog-sidebar__section">
		<div class="blog-sidebar__title">
			<span>タグ</span>
		</div>
		<div class="blog-sidebar__search">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="none"
				stroke="currentColor"
				stroke-width="1"
			>
				<path
					d="M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z"
				></path>
				<path d="M21 21L16.65 16.65"></path>
			</svg>
			<input
				type="text"
				class="blog-sidebar__search-input"
				placeholder="タグを検索"
				id="tagSearchInput"
			/>
		</div>
		<div class="blog-sidebar__tag-list" id="tagList">
			{
				allTags.map((tag: Tag) => (
					<div class="tag-list-wrapper" data-tag-name={tag.name.toLowerCase()}>
						<TagListItem
							tag={tag}
							count={tag._id && tagCounts[tag._id] ? tagCounts[tag._id] : 0}
						/>
					</div>
				))
			}
		</div>
		<a href="/blog/tags" class="blog-sidebar__more">
			<span>タグ一覧を見る</span>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="currentColor"
			>
				<path d="M8.59 16.59L13.17 12L8.59 7.41L10 6L16 12L10 18L8.59 16.59Z"
				></path>
			</svg>
		</a>
	</div>
</aside>

<script>
	const searchInput = document.getElementById(
		"tagSearchInput"
	) as HTMLInputElement;
	const tagList = document.getElementById("tagList");
	const tagItems = tagList?.querySelectorAll(".tag-list-wrapper") ?? [];

	let searchTimeout: number | undefined;

	searchInput?.addEventListener("input", (e) => {
		// Clear previous timeout
		if (searchTimeout) {
			clearTimeout(searchTimeout);
		}

		// Debounce search to improve performance
		searchTimeout = setTimeout(() => {
			const searchTerm = searchInput.value.toLowerCase().trim();

			tagItems.forEach((item) => {
				const tagName = item.getAttribute("data-tag-name") || "";
				if (tagName.includes(searchTerm)) {
					(item as HTMLElement).style.display = "block";
				} else {
					(item as HTMLElement).style.display = "none";
				}
			});
		}, 150) as unknown as number;
	});
</script>

<style>
	.blog-sidebar {
		display: flex;
		flex-direction: column;
		gap: 20px;
		width: 100%;
	}

	.blog-sidebar__section {
		display: flex;
		flex-direction: column;
		gap: 1px;
		padding: 1px;
		background-color: #000000;
	}

	.blog-sidebar__title {
		display: flex;
		align-items: center;
		padding: 8px 10px;
		background-color: #f5f5f5;
		font-family: "Noto Sans JP", sans-serif;
		font-size: 14px;
		line-height: 1.3;
		letter-spacing: 0.02em;
		color: #8c8c8c;
	}

	.blog-sidebar__search {
		display: flex;
		align-items: center;
		gap: 4px;
		padding: 10px;
		background-color: #ffffff;
		color: #bfbfbf;
	}

	.blog-sidebar__search-input {
		flex: 1;
		border: none;
		background: none;
		font-family: "Noto Sans JP", sans-serif;
		font-weight: 700;
		font-size: 14px;
		line-height: 1.55;
		letter-spacing: 0.02em;
		color: #262626;
	}

	.blog-sidebar__search-input::placeholder {
		color: #bfbfbf;
	}

	.blog-sidebar__search-input:focus {
		outline: none;
	}

	.blog-sidebar__tag-list {
		display: flex;
		flex-direction: column;
		gap: 2px;
		padding: 4px;
		background-color: #ffffff;
		max-height: 335px;
		overflow-y: auto;
	}

	.tag-list-wrapper {
		transition: opacity 0.2s ease;
	}

	.blog-sidebar__more {
		display: flex;
		align-items: center;
		gap: 4px;
		padding: 10px;
		background-color: #ffffff;
		text-decoration: none;
		font-family: "Noto Sans JP", sans-serif;
		font-weight: 700;
		font-size: 14px;
		line-height: 1.55;
		letter-spacing: 0.02em;
		color: #262626;
		transition: background-color 0.2s ease;
	}

	.blog-sidebar__more:hover {
		background-color: #f5f5f5;
	}

	.blog-sidebar__more svg {
		color: #595959;
	}
</style>
