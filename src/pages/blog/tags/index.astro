---
import { getCollection } from "astro:content";
import BlogSidebar from "../../../components/BlogSidebar.astro";
import Layout from "../../../layouts/Layout.astro";

// すべての記事を取得
const allPosts = await getCollection("blog");

// 公開済みの記事のみをフィルタリング
const publishedPosts = allPosts.filter((post) => post.data.publishedAt);

// タグごとの記事数を計算
const tagCounts = new Map<string, number>();
publishedPosts.forEach((post) => {
	if (post.data.tags) {
		post.data.tags.forEach((tag) => {
			tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
		});
	}
});

// タグを記事数順にソート
const sortedTags = Array.from(tagCounts.entries()).sort((a, b) => b[1] - a[1]);
---

<Layout title="タグ一覧 - BLOG">
	<main class="tag-list">
		<div class="tag-list__container">
			<div class="tag-list__content">
				<header class="tag-list__header">
					<h1 class="tag-list__title">タグ一覧</h1>
					<p class="tag-list__description">記事のタグから探す</p>
				</header>
				<div class="tag-list__grid">
					{
						sortedTags.map(([tag, count]) => (
							<a href={`/blog/tags/${tag}`} class="tag-list__item">
								<div class="tag-list__tag-name">#{tag}</div>
								<div class="tag-list__count">{count}件の記事</div>
							</a>
						))
					}
				</div>
				<div class="tag-list__back">
					<a href="/blog" class="tag-list__back-link">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
						>
							<path d="M19 12H5M5 12L12 19M5 12L12 5"></path>
						</svg>
						<span>ブログ一覧へ戻る</span>
					</a>
				</div>
			</div>
			<aside class="tag-list__sidebar">
				<BlogSidebar />
			</aside>
		</div>
	</main>
</Layout>

<style>
	.tag-list {
		padding: 40px 20px;
	}

	.tag-list__container {
		max-width: 1200px;
		margin: 0 auto;
		display: grid;
		grid-template-columns: 1fr 300px;
		gap: 40px;
	}

	.tag-list__content {
		overflow: hidden;
	}

	.tag-list__header {
		text-align: center;
		margin-bottom: 40px;
	}

	.tag-list__title {
		font-family: "Noto Sans JP", sans-serif;
		font-size: 32px;
		font-weight: 700;
		color: #262626;
		margin: 0 0 16px;
	}

	.tag-list__description {
		color: #8c8c8c;
		font-size: 16px;
		margin: 0;
	}

	.tag-list__grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
		gap: 20px;
		margin-bottom: 40px;
	}

	.tag-list__item {
		background-color: #ffffff;
		border: 1px solid #e5e5e5;
		padding: 20px;
		border-radius: 8px;
		text-decoration: none;
		color: #262626;
		transition: all 0.2s ease;
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
	}

	.tag-list__item:hover {
		border-color: #262626;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	}

	.tag-list__tag-name {
		font-size: 18px;
		font-weight: 600;
		margin-bottom: 8px;
	}

	.tag-list__count {
		color: #8c8c8c;
		font-size: 14px;
	}

	.tag-list__sidebar {
		position: relative;
	}

	.tag-list__back {
		text-align: center;
	}

	.tag-list__back-link {
		display: inline-flex;
		align-items: center;
		gap: 8px;
		color: #262626;
		text-decoration: none;
		padding: 12px 24px;
		border: 1px solid #262626;
		background-color: #ffffff;
		transition: all 0.2s ease;
	}

	.tag-list__back-link:hover {
		background-color: #262626;
		color: #ffffff;
	}

	@media (max-width: 768px) {
		.tag-list {
			padding: 20px 10px;
		}

		.tag-list__container {
			grid-template-columns: 1fr;
			gap: 20px;
		}

		.tag-list__sidebar {
			order: -1;
		}

		.tag-list__title {
			font-size: 24px;
		}

		.tag-list__grid {
			grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
			gap: 15px;
		}
	}
</style>
